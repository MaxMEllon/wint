
.title
  h2 ランキング
br
br

.analysis.ranking

  ul.nav.nav-tabs
    li.active
      a href="#ranking" data-toggle="tab" ランキング
    li
      a href="#submits" data-toggle="tab" 提出数
  br
  .tab-content
    .tab-pane.active#ranking
      table.table.table-base.datatable
        thead
          tr
            th.id 順位
            th.snum 学籍番号
            th.user ユーザ名
            th.role ロール
            th.score 得点
            th.score サイズ
            th.score 条件式
            th.score 宣言数
            th.score 圧縮率
        tbody
          - @players.zip(@degrees).each.with_index(1) do |data, i|
            - player, degree = data
            - if player.best
              tr
                td.id= i
                td.snum= link_to  player.user.snum, analysis_player_path(pid: player.id)
                td.user= player.user.name
                td.role= Player.role_options[player.role]
                td.score= format_score(player.best.strategy.score)
                td.score= format_score(degree[:size])
                td.score= format_score(degree[:syntax])
                td.score= format_score(degree[:fun])
                td.score= format_score(degree[:gzip])
            - else
              tr.warning
                td.id= i
                td.snum= player.user.snum
                td.user= player.user.name
                td.role= Player.role_options[player.role]
                td.score 未提出
                td.score 未提出
                td.score 未提出
                td.score 未提出
                td.score 未提出

    .tab-pane#submits
      = high_chart("bar_submits", @bar_submits)

